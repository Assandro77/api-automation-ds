{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2024-08-17T06:24:21.558Z",
    "end": "2024-08-17T06:24:21.962Z",
    "duration": 404,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ea6a5f8a-3e72-42d2-8d45-154133bffc8c",
      "title": "",
      "fullFile": "D:\\DS\\api-automation-ds\\test\\testF.js",
      "file": "\\test\\testF.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3b00692a-5fa0-48e6-9f20-41ea72b4dd40",
          "title": "API TEST for \"restful-api.dev\"",
          "fullFile": "D:\\DS\\api-automation-ds\\test\\testF.js",
          "file": "\\test\\testF.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test - GET All Objects",
              "fullTitle": "API TEST for \"restful-api.dev\" Test - GET All Objects",
              "timedOut": false,
              "duration": 237,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(BASE_URL)\n.get(\"objects\")\n//assertion\nassert.equal(response.statusCode, 200)\nassert.equal(response.body[0].data.color, \"Cloudy White\")",
              "err": {},
              "uuid": "cf2e617f-b2e4-4983-98c1-f3e6c96c8e25",
              "parentUUID": "3b00692a-5fa0-48e6-9f20-41ea72b4dd40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test - POST Store Objects",
              "fullTitle": "API TEST for \"restful-api.dev\" Test - POST Store Objects",
              "timedOut": false,
              "duration": 160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const body = {\n    \"name\": \"Ini Request  Dari automation Test\",\n    \"data\": {\n       \"year\": 2019,\n       \"price\": 1849.99,\n       \"CPU model\": \"Intel Core i9\",\n       \"Hard disk size\": \"1 TB\"\n    }\n }\n\n        const response = await request(BASE_URL)\n        .post(\"objects\")\n        .send(body)\n\n        console.log(response.statusCode);\n        console.log(response.body)\n\n        //Should\n        should(response.statusCode ===200)\n        \n        expect(response.statusCode).to.equal(200)\n        const schemaPath = \"resources/JsonSchema/post-object-schema.json\"\n\n        const jsonSchema =  JSON.parse(fs.readFileSync(schemaPath,`utf-8`))\n\n        assert.jsonSchema(response.body, jsonSchema)",
              "err": {},
              "uuid": "d8786d1a-8e5b-4d0d-88db-b98eab14b610",
              "parentUUID": "3b00692a-5fa0-48e6-9f20-41ea72b4dd40",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cf2e617f-b2e4-4983-98c1-f3e6c96c8e25",
            "d8786d1a-8e5b-4d0d-88db-b98eab14b610"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 397,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}